{
	"preprocess": {
		"dataset": "src.datasets.inria.Inria",
		"preprocess":[
			{
				"src.transforms.image_slicer.KernelSlicer": {
					"kernel_size": 448, 
					"overlap_perc": 0.15, 
					"strategy": "crop"
				}
			}
		],
		"format": "png"
	}, 

	"sharding": {
		"shard_size" : 16
	}, 

	"dataset_factory": {
		"dataset": "src.datasets.tar_dataset.TarDataset",
		"augmentations": {
			"train": [
				{
					"src.transforms.augmentations.ColorJitter": {
						"brightness": 0.3, 
						"contrast": 0.8,
						"saturation": 0.3, 
						"hue": 0.1
					}
				}, 
				{
	         		 	"src.transforms.augmentations.RandomRotation" :{
						"rotation": [-180, 180]
					}
				}
			],
			"valid": "$dataset_factory.augmentations.train$",
			"test": []
		},
		"tensor_transf": {
			"train": [],
			"valid": [],
			"test":  []
		},

		"test_ratio": 0.3, 
		"valid_ratio": 0.1, 
		"viz_samples": 20
	},

	"data_stat": {
		"viz_samples": 20
	},

	"trainer" : {		
		"amp": false,
		"epochs": 0, 
		"device": "cpu",
		"model": {
			"src.models.piramid_swiftnet.model.PiramidSwiftnet": {
				"num_classes": 2
			}
		},
		"dataloader": {
			"train": {
				"torch.utils.data.DataLoader" :{
					"dataset": "%train_db%",
					"batch_size": "$sharding.shard_size$"
				}
			}, 
			"valid": {
				"torch.utils.data.DataLoader" :{
					"dataset": "%valid_db%",
					"batch_size": "$sharding.shard_size$"
				}
			}
		},
		"loss_function": {
			"torch.nn.CrossEntropyLoss": {
				"ignore_index": -1, 
				"reduction": "mean"
			}
		}, 
		"hiper_optim": {
			"activate": false,   
			"epochs": 0,
			"lr_1": [0.0001], 
			"lr_2": [0.0001], 
			"weight_decay_1": [0.00001],
			"weight_decay_2":  [0.00001]
		},
		"optimizer": {
			"torch.optim.Adam": {
				"params": [
					        {
							"params": "%model.random_init_params()%", 
					        	"lr": 4e-4, 
							"weight_decay": 1e-4
						}, 
						{
							"params": "%model.fine_tune_params()%", 
						 	"lr": 1e-4, 
						 	"weight_decay": 0.25e-4
						}
					   ], 
				"betas": [0.9, 0.99]
			}
		},
		"lr_scheduler": {
			"torch.optim.lr_scheduler.CosineAnnealingLR": {
				"optimizer": "%optimizer%", 
				"T_max": "$trainer.epochs$"
			}
		},
		"observers":{
			"after_epoch": [
				{
					"src.observers.subscribers.StdPrinter": {}
				},
				{
					"src.observers.subscribers.MetricSaver": {
					"when": "TEST",
					"path": "trainer/artifacts"
					}
				},
				{
					"src.observers.subscribers.MetricSaver": {
					"when": "TRAIN",
					"path": "trainer/artifacts"
					}
				}			
			], 
			"after_step": [
				{
					"src.observers.subscribers.Confusion_Matrix": {
					"class_num": 2, 
					"metrics": ["%accuracy%", "%precission%", "%recall%", "%mIoU%"]
					}
				}, 
				{
					"src.observers.subscribers.Running_Loss": {
					"name": "loss"
					}
				}
			],
			"before_step": [],
			"before_epoch": []
		}
	},

	"evaluation" : {
		"device": "$trainer.device$",
		"observers": {
			"after_epoch": [], 
			"before_epoch": [], 
			"before_step": [],
			"after_step": [
				{
					"src.observers.subscribers.Confusion_Matrix": {
						"class_num": 2, 
						"metrics": ["%accuracy%", "%precission%", "%recall%", "%mIoU%"]
					}
				}, 
				{
					"src.observers.subscribers.Running_Loss": {
						"name": "test"
					}
				}, 
				{
					"src.observers.subscribers.StepPredictionSaver": {
						"path": "evaluation/artifacts/predictions", 
						"period": 1
					}
				}, 
				{
					"src.observers.subscribers.WorstK": {
						"path": "evaluation/artifacts/worstK", 
						"k": 3
					}
				},
				{
					"src.observers.subscribers.BestK": {
						"path": "evaluation/artifacts/bestK", 
						"k": 3
					}
				}
			]
		},
		"dataloader": {
			"torch.utils.data.DataLoader" :{
					"dataset": "%test_db%",
					"batch_size": 1
				}
			}
	}

	
}

